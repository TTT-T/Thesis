#  ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå .env ‡πÄ‡∏ä‡πà‡∏ô SECRET_KEY, ALGORITHM
from dotenv import load_dotenv
import os

#  ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏Ç‡∏≠‡∏á JWT
from datetime import datetime, timedelta

#  ‡πÉ‡∏ä‡πâ jose ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™/‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™ JWT
from jose import jwt

#  ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô FastAPI
from fastapi import Depends, HTTPException
from fastapi.security import OAuth2PasswordBearer

#  import ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô decode_jwt ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏¢‡∏Å
from .jwt import decode_jwt  # ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ: from .security import decode_jwt

#  ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å .env (‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ os.getenv)
load_dotenv()

#  ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Æ‡∏ä‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô (‡πÉ‡∏ä‡πâ bcrypt ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢)
import bcrypt

# ====== ‡πÅ‡∏Æ‡∏ä‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏î‡πâ‡∏ß‡∏¢ bcrypt ======
def hash_password(password: str) -> str:
    #  ‡∏™‡∏£‡πâ‡∏≤‡∏á salt ‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°
    salt = bcrypt.gensalt()
    #  ‡πÅ‡∏Æ‡∏ä‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ salt ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ
    hashed = bcrypt.hashpw(password.encode('utf-8'), salt)
    #  ‡πÅ‡∏õ‡∏•‡∏á‡∏à‡∏≤‡∏Å bytes ‚Üí string ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    return hashed.decode('utf-8')

# ====== ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å .env ======
SECRET_KEY = os.getenv("SECRET_KEY")
if not SECRET_KEY:
    raise ValueError("SECRET_KEY is missing from .env or not loaded correctly")
    #  ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏û‡∏ö SECRET_KEY ‚Üí ‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ (‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Å‡∏ß‡πà‡∏≤)

ALGORITHM = os.getenv("ALGORITHM", "HS256")
#  ‡πÉ‡∏ä‡πâ HS256 ‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ó‡∏∂‡∏° default ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ

ACCESS_TOKEN_EXPIRE_MINUTES = int(os.getenv("ACCESS_TOKEN_EXPIRE_MINUTES", "30"))
#  ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏ß‡∏•‡∏≤ access token ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ 30 ‡∏ô‡∏≤‡∏ó‡∏µ

# ====== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á JWT Token ======
def create_jwt(data: dict, expires_delta: timedelta = None):
    to_encode = data.copy()  #  copy ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏™‡πà‡πÉ‡∏ô token
    expire = datetime.utcnow() + (expires_delta or timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES))
    #  ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ default
    to_encode.update({"exp": expire})  #  ‡πÉ‡∏™‡πà‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏ô payload
    return jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)  #  ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™ JWT

# ====== ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™ JWT (‡πÅ‡∏ö‡∏ö‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô) ======
def verify_jwt(token: str):
    try:
        payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
        return payload  #  ‡∏ñ‡πâ‡∏≤ decode ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏™‡πà‡∏á payload ‡∏Å‡∏•‡∏±‡∏ö
    except Exception as e:
        print("JWT decode error:", e)
        return None  # ‚ùå ‡∏ñ‡πâ‡∏≤ decode ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß (‡πÄ‡∏ä‡πà‡∏ô token ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏)

# ====== ‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™ JWT ‡πÇ‡∏î‡∏¢‡πÄ‡∏ô‡πâ‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô Dependency ======
def decode_jwt(token: str):
    """
    Decode JWT token. Return payload if valid, otherwise None.
    """
    try:
        decoded_token = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
        return decoded_token
    except Exception as e:
        print("decode_jwt error:", e)
        return None

# ====== ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô FastAPI ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á token ‡∏à‡∏≤‡∏Å header Authorization: Bearer <token> ======
oauth2_scheme = OAuth2PasswordBearer(tokenUrl="/login")
#  FastAPI ‡∏à‡∏∞‡∏î‡∏∂‡∏á token ‡∏à‡∏≤‡∏Å header ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡πÅ‡∏•‡πâ‡∏ß‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡πÉ‡∏ä‡πâ‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏ú‡πà‡∏≤‡∏ô Depends

# ====== Dependency ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å token ======
def get_current_user(token: str = Depends(oauth2_scheme)):
    payload = decode_jwt(token)
    if not payload:
        raise HTTPException(status_code=401, detail="Token ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏")
    return payload  #  ‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• payload (‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏°‡∏µ user_id ‡∏´‡∏£‡∏∑‡∏≠ email ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ô‡∏µ‡πâ)

"""
üî• ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ JWT Authentication ‡πÉ‡∏ô FastAPI ‡∏ã‡∏∂‡πà‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢:

1. hash_password(password)
   - ‡πÉ‡∏ä‡πâ bcrypt ‡πÅ‡∏Æ‡∏ä‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏Å‡πá‡∏ö‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

2. create_jwt(data, expires_delta)
   - ‡∏™‡∏£‡πâ‡∏≤‡∏á JWT token ‡∏ó‡∏µ‡πà‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• + ‡πÄ‡∏ß‡∏•‡∏≤ expired

3. decode_jwt(token) / verify_jwt(token)
   - ‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™ JWT token ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∑‡∏ô payload (‡∏´‡∏£‡∏∑‡∏≠ None ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà valid)

4. get_current_user(token)
   - ‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö Depends ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å token ‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
   - ‡∏ñ‡πâ‡∏≤ token ‡∏ú‡∏¥‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ‚Üí ‡∏Ñ‡∏∑‡∏ô 401 Unauthorized

5. oauth2_scheme
   - ‡∏î‡∏∂‡∏á token ‡∏à‡∏≤‡∏Å HTTP Header `Authorization: Bearer <token>`

 ‡πÉ‡∏ä‡πâ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö login / auth ‡πÄ‡∏ä‡πà‡∏ô:
   - ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ login ‚Üí ‡∏£‡∏±‡∏ö token ‚Üí ‡∏ô‡∏≥ token ‡πÅ‡∏ô‡∏ö‡∏°‡∏≤‡∏Å‡∏±‡∏ö request ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
   - API endpoint ‡πÉ‡∏ä‡πâ Depends(get_current_user) ‚Üí ‡πÄ‡∏ä‡πá‡∏Å‡∏ß‡πà‡∏≤‡πÉ‡∏Ñ‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏°‡∏≤

 ‡πÉ‡∏ä‡πâ .env ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤ SECRET_KEY, ALGORITHM, ‡πÅ‡∏•‡∏∞ EMAIL ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
 ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏à‡∏£‡∏¥‡∏á
"""
#  ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
#  ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÅ‡∏•‡∏∞ log ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡πÉ‡∏ô production
