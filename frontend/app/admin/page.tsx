'use client'

// ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ useEffect ‡πÅ‡∏•‡∏∞ useState ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ state ‡πÅ‡∏•‡∏∞ lifecycle
import { useEffect, useState } from 'react'

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Role
export default function EditUserRolePage() {
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á state users ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
  const [users, setUsers] = useState<any[]>([])

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á state message ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô role ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à/‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß
  const [message, setMessage] = useState('')

  // ‡πÄ‡∏°‡∏∑‡πà‡∏≠ component ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à ‡πÉ‡∏´‡πâ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  useEffect(() => {
    const token = localStorage.getItem('access_token') // ‡∏î‡∏∂‡∏á token
    fetch(`${process.env.NEXT_PUBLIC_API_URL}/admin/users`, {
      headers: { Authorization: `Bearer ${token}` }, // ‡πÅ‡∏ô‡∏ö token ‡πÅ‡∏ö‡∏ö Bearer ‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢
    })
      .then((res) => res.json()) // ‡πÅ‡∏õ‡∏•‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÄ‡∏õ‡πá‡∏ô JSON
      .then((data) => setUsers(data)) // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô state users
  }, [])

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á role ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ô‡πÉ‡∏î‡∏Ñ‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á
  const handleRoleChange = async (id: number, role: string) => {
    const token = localStorage.getItem('access_token') // ‡∏î‡∏∂‡∏á token
    const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/admin/users/${id}/role`, {
      method: 'PATCH', // ‡πÉ‡∏ä‡πâ method PATCH
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${token}`,
      },
      body: JSON.stringify({ role }), // ‡∏™‡πà‡∏á role ‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏õ‡πÉ‡∏ô body
    })
    if (res.ok) {
      setMessage('‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô role ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à') // ‡∏´‡∏≤‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏µ‡πâ
    } else {
      setMessage('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô role ‡πÑ‡∏î‡πâ') // ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏µ‡πâ
    }
  }

  // ‡∏™‡πà‡∏ß‡∏ô UI ‡∏Ç‡∏≠‡∏á component
  return (
    <div className="min-h-screen bg-white dark:bg-gray-900 text-gray-800 dark:text-white p-8">
      <div className="max-w-4xl mx-auto bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-700 p-6 rounded shadow">
        <h1 className="text-2xl font-bold mb-6 text-blue-800 dark:text-blue-300">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</h1>
        {message && <p className="mb-4 text-green-700 dark:text-green-400">{message}</p>}

        <table className="w-full border border-gray-300 dark:border-gray-700">
          <thead>
            <tr className="bg-gray-100 dark:bg-gray-700 text-black dark:text-white">
              <th className="border px-4 py-2">‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</th>
              <th className="border px-4 py-2">‡∏≠‡∏µ‡πÄ‡∏°‡∏•</th>
              <th className="border px-4 py-2">Role</th>
              <th className="border px-4 py-2">‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Role</th>
            </tr>
          </thead>
          <tbody>
            {/* ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ users ‡πÄ‡∏õ‡πá‡∏ô array ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ */}
            {Array.isArray(users) && users.map((user) => (
              <tr key={user.id} className="bg-white dark:bg-gray-800">
                <td className="border px-4 py-2">{user.username}</td>
                <td className="border px-4 py-2">{user.email}</td>
                <td className="border px-4 py-2">{user.role}</td>
                <td className="border px-4 py-2">
                  <select
                    value={user.role}
                    onChange={(e) => handleRoleChange(user.id, e.target.value)}
                    className="border p-1 bg-white dark:bg-gray-700 dark:text-white rounded"
                  >
                    <option value="user">user</option>
                    <option value="admin">admin</option>
                    <option value="superadmin">superadmin</option>
                  </select>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  )
}

/*
üì¶ ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á component EditUserRolePage:

- ‡∏î‡∏∂‡∏á token ‡∏à‡∏≤‡∏Å localStorage ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å backend
- users ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏ô‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÄ‡∏ä‡πà‡∏ô id, username, email, role
- ‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô role ‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏à‡∏≤‡∏Å dropdown
- ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô role ‚Üí ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API PATCH ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï role
- ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏£‡∏≤‡∏ö (‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à/‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß)
- ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö dark mode ‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö ‡∏î‡πâ‡∏ß‡∏¢ Tailwind CSS ‡πÄ‡∏ä‡πà‡∏ô dark:bg-gray-800, dark:text-white
*/